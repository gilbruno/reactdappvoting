{"version":3,"sources":["components/Dashboard.js","components/Voters.js","components/Proposals.js","components/Voting.js","components/CardIcon.js","components/Homecontent.js","components/Home.js","App.js","serviceWorker.js","index.js"],"names":["Dashboard","props","connectedAccount","stateProps","contract","web3","accounts","useState","workflowStatus","setWorkflowStatus","isOwner","setIsOwner","setIsVoter","winningProposalId","setWinningProposalID","winningProposalName","setWinningProposalName","winningProposalVoteCount","setWinningProposalVoteCount","useEffect","a","console","log","methods","call","workflowstatus","owner","toLowerCase","getVoter","voter","isVoterBool","isRegistered","message","includes","from","winningProposalID","getOneProposal","winningProp","description","voteCount","changeWorkflowStatus","event","preventDefault","startProposalsRegistering","send","endProposalsRegistering","startVotingSession","endVotingSession","tallyVotes","newWorkflowStatus","parseInt","workflowStatusName","workflow","wfStatusName","getWorkflowStatusName","workflowStatusButtonName","wfStatusButtonName","getWorkflowStatusButtonName","warningIsNotOwner","className","role","inputWorkflowStatus","type","id","aria-describedby","value","disabled","buttonModifyStatus","onClick","displayResult","for","Voters","addVoter","setAddVoter","voters","warning","setWarning","isVoter","displayVoterInformations","setDisplayVoterInformations","view","initView","toastColor","setToastColor","readVoterInput","useRef","myVoters","map","key","address","warningMsg","workflowStatusNok","addNewVoter","newVoter","handleOnChangeAddVoter","target","addVoterInput","onChange","addVoterButton","displayAddVoterForm","length","onSubmit","displayVoterInfos","handleClickReadVoter","current","hasVoted","votedProposalId","displayReadVoterForm","ref","ToastContainer","position","Toast","onClose","show","delay","autohide","Header","Body","Button","Proposals","addProposal","setAddProposal","name","proposals","setProposals","getPastEventsProposalsHistory","proposalsFromcontract","myProposals","proposal","options","fromBlock","toBlock","getPastEvents","proposalsEvents","i","idProposal","returnValues","proposalId","push","getMaxIdProposal","addNewProposal","newProposal","maxIdProposal","displayAddProposalForm","Voting","votingId","setVotingId","displayWarningHasVoted","setDisplayWarningHasVoted","displayVotingForm","setVote","votindId","handleSubmitVote","Component","HomeContent","baseProfile","xmlns","x","y","viewBox","d","class","src","alt","href","Home","error","setError","setConnectedAccount","state","setState","handleConnect","window","ethereum","on","request","method","Web3","enable","eth","getAccounts","net","getId","networkId","deployedNetwork","VotingContract","networks","instance","Contract","abi","connection","undefined","to","aria-live","aria-atomic","data-bs-dismiss","aria-label","path","element","App","storageValue","componentDidMount","runExample","this","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.9f27b1a5.chunk.js","sourcesContent":["import React, {useState, useEffect} from 'react'\n\nfunction Dashboard(props) {\n\n  const {connectedAccount, stateProps} = props;  \n  const web3 = stateProps.web3\n  const contract = stateProps.contract\n  const accounts = stateProps.accounts\n\n  const [workflowStatus, setWorkflowStatus] = useState(0)\n  const [isOwner, setIsOwner]               = useState(false)\n  const [isVoter, setIsVoter]               = useState(false)\n  const [winningProposalId, setWinningProposalID] = useState(null)\n  const [winningProposalName, setWinningProposalName] = useState(null)\n  const [winningProposalVoteCount, setWinningProposalVoteCount] = useState(null)\n\n  useEffect(() => {\n    (async function() {\n      console.log('useEffect contract')\n      if (contract !== null) {\n        let workflowstatus = await contract.methods.workflowStatus().call();\n        let owner          = await contract.methods.owner().call();\n        if (connectedAccount.toLowerCase() === owner.toLowerCase()) {\n          setIsOwner(true)\n        }\n        else {\n          setIsOwner(false)\n        }\n        setWorkflowStatus(workflowstatus)\n        setIsVoter(false)\n\n      }\n    })()\n  }, [contract])\n\n  //useEffect on \"accounts\" state value change\n  useEffect(() => {\n    (async function() {\n      console.log('useEffect accounts')\n      if (contract !== null) {\n        let owner          = await contract.methods.owner().call();\n        //Set isOwner\n        if (connectedAccount.toLowerCase() === owner.toLowerCase()) {\n          setIsOwner(true)\n        }\n        else {\n          setIsOwner(false)\n        }\n        //Set isVoter\n        try {\n          let voter = await contract.methods.getVoter(connectedAccount).call()\n          let isVoterBool = (voter.isRegistered) ? true : false\n          setIsVoter(isVoterBool)\n        }\n        catch (err) {\n          if (err.message.includes('not a voter')) {\n            setIsVoter(false)\n          }\n        }\n      }  \n    })()\n  }, [accounts])\n\n    //useEffect on \"workflowStatus\" state value change\n    useEffect(() => {\n      (async function() {\n        console.log('useEffect workflowStatus')\n        if (contract !== null) {\n          let workflowstatus = await contract.methods.workflowStatus().call({from : connectedAccount});\n          setWorkflowStatus(workflowstatus)\n          let winningProposalId = await contract.methods.winningProposalID().call({from : connectedAccount});\n          setWinningProposalID(winningProposalId)\n          let winningProp = await contract.methods.getOneProposal(winningProposalId).call({from: connectedAccount})\n          setWinningProposalName(winningProp.description)\n          setWinningProposalVoteCount(winningProp.voteCount)\n        }  \n      })()\n    }, [workflowStatus])\n  \n  const getWorkflowStatusName = (workflow) => {\n    let wfStatusName\n    switch (workflow) {\n      case '0':\n        wfStatusName = 'RegisteringVoters'\n        break\n      case '1':\n        wfStatusName = 'ProposalsRegistrationStarted'\n        break\n      case '2':\n        wfStatusName = 'ProposalsRegistrationEnded'\n        break\n      case '3':\n        wfStatusName = 'VotingSessionStarted'\n        break  \n      case '4':\n        wfStatusName = 'VotingSessionEnded'\n        break   \n      case '5':\n        wfStatusName = 'VotesTallied'\n        break         \n\n    }  \n    return wfStatusName\n  }\n\n  const getWorkflowStatusButtonName = (workflow) => {\n    let wfStatusButtonName\n    switch (workflow) {\n      case '0':\n        wfStatusButtonName = 'Start Proposals Registration'\n        break\n      case '1':\n        wfStatusButtonName = 'End Proposals Registration'\n        break\n      case '2':\n        wfStatusButtonName = 'Start Voting Session'\n        break\n      case '3':\n        wfStatusButtonName = 'End Voting Session'\n        break  \n      case '4':\n        wfStatusButtonName = 'Tally Votes'\n        break   \n      case '5':\n        wfStatusButtonName = 'VOTING IS ENDED'\n        break   \n    }  \n\n    return wfStatusButtonName\n  }\n\n  const changeWorkflowStatus = async (event) => {\n    event.preventDefault();\n    console.log(workflowStatus)\n    \n    if (workflowStatus == '0') {\n      await contract.methods.startProposalsRegistering().send({from: connectedAccount})\n    }\n    else if (workflowStatus == '1') {\n      await contract.methods.endProposalsRegistering().send({from: connectedAccount})\n    }\n    else if (workflowStatus == '2') {\n      await contract.methods.startVotingSession().send({from: connectedAccount})\n    }\n    else if (workflowStatus == '3') {\n      await contract.methods.endVotingSession().send({from: connectedAccount})\n    }\n    else if (workflowStatus == '4') {\n      await contract.methods.tallyVotes().send({from: connectedAccount})\n    }  \n    let newWorkflowStatus = parseInt(workflowStatus)+1\n    setWorkflowStatus(newWorkflowStatus)\n  }\n\n\n  const workflowStatusName       = getWorkflowStatusName(workflowStatus)\n  const workflowStatusButtonName = getWorkflowStatusButtonName(workflowStatus)\n  const warningIsNotOwner = !isOwner && <div className=\"alert alert-danger mt-4 w-50\" role=\"alert\">You can't modify the workflow Status because you are not the owner</div>\n  \n  const inputWorkflowStatus = (isOwner) && <div><label>Current workflow status :</label><input type=\"text\" className=\"form-control w-50\" id=\"workflowStatus\" aria-describedby=\"workflowStatusHelp\" value={workflowStatusName} disabled/></div>\n  const buttonModifyStatus = (isOwner) \n    ? (workflowStatusButtonName=='VOTING IS ENDED') \n        ? <button type=\"\" className=\"btn btn-primary\" disabled onClick={changeWorkflowStatus}>{workflowStatusButtonName}</button>\n        : <button type=\"\" className=\"btn btn-primary\" onClick={changeWorkflowStatus}>{workflowStatusButtonName}</button>\n    : ''\n\n\n  const displayResult = (workflowStatusName != 'VotesTallied')?<div className=\"alert alert-danger mt-4 w-50\" role=\"alert\">Results are not known yet</div>\n    :<div className=\"mt-5\">\n      <label for=\"winnerIdInput\" className=\"form-label\">Winner ID : </label>\n      <input type=\"text\" className=\"form-control w-25\" id=\"winnerId\" aria-describedby=\"winnerIdHelp\" disabled value={winningProposalId}/>\n      <label for=\"winnerNameInput\" className=\"form-label\">Proposal Name : </label>\n      <input type=\"text\" className=\"form-control w-25\" id=\"winnerName\" aria-describedby=\"winnerNameHelp\" disabled value={winningProposalName}/>\n      <label for=\"winnerVoteCountInput\" className=\"form-label\">Vote Count : </label>\n      <input type=\"text\" className=\"form-control w-25\" id=\"winnerVoteCount\" aria-describedby=\"winnerVoteCountHelp\" disabled value={winningProposalVoteCount}/>\n    </div>\n\n  const getPastEventsWorkflowStatusChange = async () => {\n    if (connectedAccount != '') {\n      let options = {\n        fromBlock:0,\n        toBlock: 'latest'\n      }\n      let proposals = []\n      let proposalsEvents = await contract.getPastEvents('WorkflowStatusChange', options);\n      for (let i = 0; i < proposalsEvents.length; i++) {\n        let idProposal = proposalsEvents[i].returnValues.proposalId\n        let proposal = await contract.methods.getOneProposal(idProposal).call({from: connectedAccount})\n        proposals.push({id : idProposal, name: proposal.description})\n      }\n      \n    }\n  }\n\n  return (\n    <div className=\"container\">\n      <div className=\"divider mt-5\"><span></span><span>Workflow Status</span><span></span></div>\n      <div className=\"mt-5\">\n        <form className=\"\">\n          <div className=\"mb-3 form-group mt-4\">\n            {inputWorkflowStatus}\n          </div>\n          {buttonModifyStatus}\n          {warningIsNotOwner}\n        </form>\n      </div>\n      <br/>\n      <br/>\n      <div className=\"divider mt-5\"><span></span><span>Results</span><span></span></div>\n      {displayResult}\n      \n    </div>\n  )\n}\n\nexport default Dashboard","import React, {useState, useEffect, useRef} from 'react'\nimport { v4 as uuidv4 } from 'uuid'\nimport getWeb3 from \"../getWeb3\";\nimport { Toast, Button, ToastContainer } from 'react-bootstrap'\n\n\nconst Voters = (props) => {\n  const {connectedAccount, stateProps} = props;  \n  const web3 = stateProps.web3\n  const contract = stateProps.contract\n  const accounts = stateProps.accounts\n  //console.log('Page des Voters ')\n\n  const [addVoter, setAddVoter] = useState('')\n  const [voters, setVoters]                 = useState([])\n  const [warning, setWarning]               = useState(false)\n  const [isOwner, setIsOwner]               = useState(true)\n  const [isVoter, setIsVoter]               = useState(false)\n  const [workflowStatus, setWorkflowStatus] = useState(0)\n  const [displayVoterInformations, setDisplayVoterInformations] = useState('')\n  const [view, initView] = useState(false)\n  const [toastColor, setToastColor] = useState('')\n\n\n  const readVoterInput = useRef('')\n\n  useEffect(() => {\n    (async function() {\n      console.log('1')\n      if (contract !== null) {\n        let workflowstatus = await contract.methods.workflowStatus().call();\n        let owner          = await contract.methods.owner().call();\n        if (connectedAccount.toLowerCase() === owner.toLowerCase()) {\n          setIsOwner(true)\n        }\n        else {\n          setIsOwner(false)\n        }\n        setWorkflowStatus(workflowstatus)\n        setIsVoter(false)\n\n      }\n    })()\n  }, [contract])\n\n  useEffect(() => {\n    (async function() {\n      console.log('useeffect isVoter')\n      \n    })()\n  }, [isVoter])\n\n  //useEffect on \"accounts\" state value change\n  useEffect(() => {\n    (async function() {\n      console.log('2')\n      if (contract !== null) {\n        let owner          = await contract.methods.owner().call();\n        //Set isOwner\n        if (connectedAccount.toLowerCase() === owner.toLowerCase()) {\n          setIsOwner(true)\n        }\n        else {\n          setIsOwner(false)\n        }\n        //Set isVoter\n        try {\n          let voter = await contract.methods.getVoter(connectedAccount).call()\n          let isVoterBool = (voter.isRegistered) ? true : false\n          setIsVoter(isVoterBool)\n          console.log('isVoterBool : ' + isVoterBool)\n        }\n        catch(err) {\n          setIsVoter(false)\n        } \n        \n      }  \n    })()\n  }, [accounts])\n\n  const myVoters = voters.map(voter => {\n    return (\n        <li className=\"list-group-item\" key={voter.id}>{voter.address}</li>\n    )\n    }\n  )\n\n  const warningMsg = warning && <div className=\"alert alert-danger mt-4\" role=\"alert\"> Veuillez indiquer un Voter </div>\n\n  const workflowStatusNok = (workflowStatus != '0') ? <div className=\"alert alert-danger mt-4\" role=\"alert\">You can't add voter anymore because workflow status is not \"REGISTERINGVOTERS\"</div> : ''\n  \n  const addNewVoter = async (newVoter) => {\n    if (newVoter !== \"\") {\n        console.log('Send transaction to metamask to add new voter')\n        await contract.methods.addVoter(newVoter).send({from: connectedAccount})\n        let voters = await contract.methods.getVoter(newVoter).call()\n        console.log(voters)\n        setWarning(warning ? !warning : warning);\n        setAddVoter('')\n        if (connectedAccount.toLowerCase() === newVoter) {\n          setIsVoter(true)\n        }\n\n    }  \n    else {\n        setWarning(true);\n    }    \n  }\n\n  const handleSubmitAddVoter = (event) => {\n    event.preventDefault()  \n    addNewVoter(addVoter)\n  }\n\n  const handleOnChangeAddVoter = (event) => {\n    setAddVoter(event.target.value)\n  }\n\n  const addVoterInput = (workflowStatus != 0) ? <input type=\"text\" className=\"form-control w-50\" id=\"addVoterAddressInput\" aria-describedby=\"addVoterAddressHelp\" value={addVoter} onChange={handleOnChangeAddVoter} disabled/> \n    : <input type=\"text\" className=\"form-control\" id=\"addVoterAddressInput\" aria-describedby=\"addVoterAddressHelp\" value={addVoter} onChange={handleOnChangeAddVoter}/>\n\n  const addVoterButton = (workflowStatus != 0) ? <button type=\"submit\" className=\"btn btn-primary\" disabled>Add Voter</button> : <button type=\"submit\" className=\"btn btn-primary\">Add Voter</button>\n\n  const myVotersList = (myVoters.length != 0) ? <ul className=\"list-group\">{myVoters}</ul>: ''\n\n  const displayAddVoterForm = (isOwner && connectedAccount != '')? \n    <form onSubmit={handleSubmitAddVoter}>\n      <div className=\"mb-3 form-group\">\n        <label for=\"addVoterAddressInput\" className=\"form-label\">Voter address</label>\n        {addVoterInput}\n        <div id=\"addVoterAddressHelp\" className=\"form-text\">Add a voter by giving a new ETH address</div>\n      </div>\n      {addVoterButton}\n      <br/>\n      <br/>\n      <br/>\n    </form>\n    : <div className=\"card\"><div className=\"card-body alert-danger\">You cannot add voters in the white list as you're not the owner.</div></div>\n\n  let displayVoterInfos = ''\n\n  const handleClickReadVoter = async (event) => {\n    initView(true)\n    event.preventDefault()\n    console.log('readVoterInput')\n    console.log(readVoterInput.current.value)\n    //Check if the current account is a voter registered in the whitelist\n    try {\n      let currentVoter = await contract.methods.getVoter(connectedAccount).call({from:connectedAccount})\n    }\n    catch (err) {\n      if (err.message.includes(\"not a voter\")) {\n        displayVoterInfos = \"You cannot read infos of the voter as you are not registered\"\n        setDisplayVoterInformations(displayVoterInfos)\n        setToastColor('red')\n        readVoterInput.current.value = ''\n        return\n      }\n      else {\n        console.log(err.message)\n      }\n    }\n    \n    try {\n      let voter = await contract.methods.getVoter(readVoterInput.current.value).call({from:connectedAccount})\n      displayVoterInfos = \"IS REGISTERED : \" + voter.isRegistered +\" -- HAS VOTED : \" + voter.hasVoted +  \" - PROPOSAL ID VOTED : \" + voter.votedProposalId\n      setToastColor('blue')\n      setDisplayVoterInformations(displayVoterInfos)\n      readVoterInput.current.value = ''\n    }\n    catch(err) {\n      displayVoterInfos = \"Bad ETH Address !\"\n      setDisplayVoterInformations(displayVoterInfos)\n      readVoterInput.current.value = ''\n    }\n    \n      \n  }  \n\n  const displayReadVoterForm = \n    <form>\n    <h2>Read Voter (only voters)</h2>\n    <div className=\"mb-3 form-group\">\n      <label for=\"getVoterAddressInput\" className=\"form-label\">Voter address</label>\n      <input type=\"text\" className=\"form-control\" id=\"voterAddressInput\" ref={readVoterInput} aria-describedby=\"getVoterAddressHelp\"/>\n      <div id=\"getVoterAddressHelp\" className=\"form-text\">Read infos about a voter address by giving an existing ETH voter address</div>\n    </div>\n    <ToastContainer position=\"top-center\">\n    <Toast onClose={() => initView(false)} show={view} delay={7000} autohide>\n        <Toast.Header>\n        <strong className=\"mr-auto\"></strong>\n        </Toast.Header>\n        <Toast.Body className={toastColor}>{displayVoterInformations}</Toast.Body>\n    </Toast>\n    </ToastContainer>\n    <Button className=\"mt-4\" onClick={handleClickReadVoter}>Read Voter</Button>\n    <br/>\n    <br/>\n    </form> \n    \n  return (\n    <div className=\"container\">\n      <div className=\"divider mt-5\"><span></span><span>Add Voters (only admin)</span><span></span></div>\n      {warningMsg}\n      {workflowStatusNok}\n      <br/>\n      <br/>\n      {displayAddVoterForm}        \n        <br/>\n        <br/>\n        <div className=\"divider mt-5\"><span></span><span>Read Voter</span><span></span></div>  \n      {displayReadVoterForm}        \n    </div>\n  )\n}\n\nexport default Voters","import React, {useState, useEffect} from 'react'\nimport { v4 as uuidv4 } from 'uuid'\n\nfunction Proposals(props) {\n\n  const {connectedAccount, stateProps} = props;  \n  \n  const web3 = stateProps.web3\n  const contract = stateProps.contract\n  const accounts = stateProps.accounts\n  //console.log('Page des Proposals')\n\n  const [addProposal, setAddProposal] = useState('')\n  const [proposals, setProposals] = useState([{id: '', name:''}])\n  const [warning, setWarning] = useState(false)\n  const [isOwner, setIsOwner] = useState(true)\n  const [isVoter, setIsVoter] = useState(false)\n  const [workflowStatus, setWorkflowStatus] = useState(0)\n  \n  useEffect(() => {\n    (async function() {\n      if (contract !== null) {\n        let workflowstatus = await contract.methods.workflowStatus().call();\n        let owner          = await contract.methods.owner().call();\n        if (connectedAccount.toLowerCase() === owner.toLowerCase()) {\n          setIsOwner(true)\n        }\n        else {\n          setIsOwner(false)\n        }\n        setWorkflowStatus(workflowstatus)\n        setIsVoter(false)\n      }\n    })()\n  }, [contract])\n\n  //useEffect on \"accounts\" state value change\n  useEffect(() => {\n    (async function() {\n      console.log('useEffect')  \n    })()\n  }, [accounts])\n\n  //useEffect on \"accounts\" state value change\n  useEffect(() => {\n    (async function() {\n      console.log('2')\n      if (contract !== null) {\n        let owner          = await contract.methods.owner().call();\n        //Set isOwner\n        if (connectedAccount.toLowerCase() === owner.toLowerCase()) {\n          setIsOwner(true)\n        }\n        else {\n          setIsOwner(false)\n        }\n        //Set isVoter\n        let voter = await contract.methods.getVoter(connectedAccount).call()\n        let isVoterBool = (voter.isRegistered) ? true : false\n        setIsVoter(isVoterBool)\n        console.log('isVoterBool : ' + isVoterBool)\n\n        //Set Proposals\n        let proposalsFromcontract = await getPastEventsProposalsHistory()\n        setProposals(proposalsFromcontract)\n      }  \n    })()\n  }, [accounts])\n\n\n  const myProposals = (proposals.length == 1 && proposals[0].id == '')\n    ?<div className=\"alert alert-danger mt-4\" role=\"alert\"> No proposals yet </div>\n    : proposals.map(proposal => {\n    return (\n        <li className=\"list-group-item\" key={proposal.id}>ID : {proposal.id}  | NAME : {proposal.name}</li>\n    )\n    }\n  )\n\n  const warningMsg = warning && <div className=\"alert alert-danger mt-4\" role=\"alert\"> Veuillez indiquer un Proposal </div>\n\n  const getPastEventsHistory = async () => {\n    let options = {\n      fromBlock:0,\n      toBlock: 'latest'\n    }\n    let proposals = []\n    let proposalsEvents = await contract.getPastEvents('ProposalRegistered', options);\n    return proposalsEvents;\n  }\n\n  const getPastEventsProposalsHistory = async () => {\n    let options = {\n      fromBlock:0,\n      toBlock: 'latest'\n    }\n    let proposals = []\n    let proposalsEvents = await contract.getPastEvents('ProposalRegistered', options);\n    //console.log('proposalsEvents')\n    //console.log(proposalsEvents)\n    for (let i = 0; i < proposalsEvents.length; i++) {\n      let idProposal = proposalsEvents[i].returnValues.proposalId\n      let proposal = await contract.methods.getOneProposal(idProposal).call({from: connectedAccount})\n      proposals.push({id : idProposal, name: proposal.description})\n    }\n    return proposals\n  }\n\n  const getMaxIdProposal = async () => {\n    let proposals = await getPastEventsProposalsHistory()\n    return (proposals.length -1)\n  }\n\n  const isPRoposalsArrayEmpty = () => {\n    return (proposals.length == 1 && proposals[0].id == '')\n  }\n\n  const addNewProposal = async (newProposal) => {\n    if (newProposal !== \"\") {\n        \n        console.log('Send transaction to metamask to add new proposal')\n        await contract.methods.addProposal(newProposal).send({from: connectedAccount})\n        \n        if (isPRoposalsArrayEmpty()) {\n          setProposals([{\n            id: 0,\n            name:newProposal\n            }\n          ])\n        }\n        else {\n          let maxIdProposal = await getMaxIdProposal()\n          setProposals([...proposals, {\n            id: maxIdProposal+1,\n            name:newProposal\n            }\n          ])\n        }\n        console.log(\"proposal\")\n        //console.log(proposal)\n        setWarning(warning ? !warning : warning);\n        setAddProposal('')\n    }  \n    else {\n        setWarning(true);\n    }    \n  }\n\n  const handleSubmitAddProposal = (event) => {\n    event.preventDefault()  \n    console.log('addProposal : ' + addProposal)\n    addNewProposal(addProposal)\n  }\n\n  const handleOnChangeAddProposal = (event) => {\n    setAddProposal(event.target.value)\n  }\n\n  const myProposalsList = (myProposals.length != 0) ? <ul className=\"list-group\">{myProposals}</ul>: ''\n\n  const workflowStatusNok = (workflowStatus != '1') ? <div className=\"alert alert-danger mt-4\" role=\"alert\">You can't add proposal anymore because workflow status is not \"ProposalsRegistrationStarted\"</div> : ''\n\n  const displayAddProposalForm = (isVoter && (workflowStatus == '1'))\n    ? \n    <form onSubmit={handleSubmitAddProposal}>\n      \n      <div className=\"mb-3\">\n        <label for=\"proposalInput\" className=\"form-label\">Proposal : </label>\n        <input type=\"text\" className=\"form-control\" id=\"proposalInput\" aria-describedby=\"proposalHelp\" value={addProposal} onChange={handleOnChangeAddProposal}/>\n        <div id=\"proposalHelp\" className=\"form-text\">Add a proposal by giving a new proposal</div>\n      </div>\n      <button type=\"submit\" className=\"btn btn-primary\">Add Proposal</button>\n      <br/>\n      <br/>\n      <br/>        \n    </form>\n    : <div className=\"card\"><div className=\"card-body alert-danger\">You cannot add proposals as you're not a voter (registered in the white list).</div></div>\n\n    const displayReadProposalForm = isVoter\n    ? <form>\n        <h2>Read Proposal (only voters)</h2>\n        <div className=\"mb-3 form-group\">\n          <label for=\"getProposalInput\" className=\"form-label\">Voter address</label>\n          <input type=\"text\" className=\"form-control\" id=\"proposalAddressInput\" aria-describedby=\"getProposalAddressHelp\"/>\n          <div id=\"getProposalAddressHelp\" className=\"form-text\">Read infos about a proposal address by giving an existing ID proposal</div>\n        </div>\n        <button type=\"submit\" className=\"btn btn-primary\">Read Proposal</button>\n      </form>\n    :  <div className=\"card\"><div className=\"card-body text-danger bg-dark\">You cannot read infos about proposals as you're not registered in the white list.</div></div>\n\n  return (\n    <div className=\"container\">\n      <div className=\"divider mt-5\"><span></span><span>Add Proposal</span><span></span></div>\n      {warningMsg}\n      {workflowStatusNok}\n      <br/>\n      <br/>\n      {displayAddProposalForm}\n      <br/>\n      <br/>\n      <div className=\"divider mt-5\"><span></span><span>List of Proposals</span><span></span></div>\n      {myProposals}\n      \n      \n    </div>\n  )\n}\n\nexport default Proposals","import React, {useState, useEffect} from 'react'\nimport { Toast, Button } from 'react-bootstrap'\n\nfunction Voting(props) {\n\n    const {connectedAccount, stateProps} = props;  \n\n    const web3 = stateProps.web3\n    const contract = stateProps.contract\n    const accounts = stateProps.accounts\n    //console.log('Page des Proposals')\n\n    const [addProposal, setAddProposal] = useState('')\n    const [proposals, setProposals] = useState([{id: '', name:''}])\n    const [warning, setWarning] = useState(false)\n    const [isOwner, setIsOwner] = useState(true)\n    const [isVoter, setIsVoter] = useState(false)\n    const [workflowStatus, setWorkflowStatus] = useState(0)\n    const [votingId, setVotingId] = useState(null)\n    const [view, initView] = useState(false)\n    const [displayWarningHasVoted, setDisplayWarningHasVoted] = useState('')\n \n    useEffect(() => {\n        (async function() {\n          console.log('1')\n          if (contract !== null) {\n            let workflowstatus = await contract.methods.workflowStatus().call();\n            let owner          = await contract.methods.owner().call();\n            if (connectedAccount.toLowerCase() === owner.toLowerCase()) {\n              setIsOwner(true)\n            }\n            else {\n              setIsOwner(false)\n            }\n            setWorkflowStatus(workflowstatus)\n            setIsVoter(false)\n    \n          }\n        })()\n      }, [contract])\n    \n      //useEffect on \"accounts\" state value change\n      useEffect(() => {\n        (async function() {\n          console.log('2')\n          if (contract !== null) {\n            let owner          = await contract.methods.owner().call({from: connectedAccount});\n            //Set isOwner\n            if (connectedAccount.toLowerCase() === owner.toLowerCase()) {\n              setIsOwner(true)\n            }\n            else {\n              setIsOwner(false)\n            }\n            //Set isVoter\n            let voter = await contract.methods.getVoter(connectedAccount).call({from: connectedAccount})\n            let isVoterBool = (voter.isRegistered) ? true : false\n            setIsVoter(isVoterBool)\n            console.log('isVoterBool : ' + isVoterBool)\n          }  \n        })()\n      }, [accounts])\n    \n        \n    const getWorkflowStatusName = (workflow) => {\n        let wfStatusName\n        switch (workflow) {\n          case '0':\n            wfStatusName = 'RegisteringVoters'\n            break\n          case '1':\n            wfStatusName = 'ProposalsRegistrationStarted'\n            break\n          case '2':\n            wfStatusName = 'ProposalsRegistrationEnded'\n            break\n          case '3':\n            wfStatusName = 'VotingSessionStarted'\n            break  \n          case '4':\n            wfStatusName = 'VotingSessionEnded'\n            break   \n          case '5':\n            wfStatusName = 'VotesTallied'\n            break         \n    \n        }  \n        return wfStatusName\n      }\n    \n    let displayVotingForm = ''\n\n    const setVote = async (votindId) => {\n      if (votingId != '') {\n        try {\n          await contract.methods.setVote(votingId).send({from: connectedAccount})\n        }\n        catch (err) {\n          if (err.message.includes('Proposal not found')) {\n            initView(true)\n            setDisplayWarningHasVoted(\"Proposal does not exist\")\n            setVotingId('')\n            return\n          }\n        }\n      }\n    }\n\n    const hasVoted = async() => {\n      try {\n        let voter = await contract.methods.getVoter(connectedAccount).call({from:connectedAccount})\n        if (voter.hasVoted) {\n          alert(\"You can vote only ONCE !\")\n        }\n      }\n      catch(err) {\n        console.log(err.message);\n      }\n    }\n\n    const handleSubmitVote = async (event) => {\n      event.preventDefault()  \n      try {\n        let voter = await contract.methods.getVoter(connectedAccount).call({from:connectedAccount})\n        if (voter.hasVoted) {\n          initView(true)\n          setDisplayWarningHasVoted(\"You can vote only ONCE !\")\n          return\n        }\n        else {\n          setVote(votingId)\n          setVotingId('')\n        }\n      }\n      catch(err) {\n        console.log(err.message);\n      }\n    }\n  \n    const handleOnChangeSetVote = (event) => {\n      setVotingId(event.target.value)\n    }\n\n    let workflowStatusName = getWorkflowStatusName(workflowStatus)\n\n    //workflowStatusName = 'VotingSessionStarted'\n    if (isVoter && workflowStatusName == 'VotingSessionStarted') {\n        displayVotingForm = \n        <form>\n        <div className=\"mb-3 form-group\">\n          <label for=\"votingInput\" className=\"form-label\">Proposal ID</label>\n          <input type=\"text\" className=\"form-control\" id=\"votingInput\" aria-describedby=\"votingInputHelp\" value={votingId} onChange={handleOnChangeSetVote}/>\n          <div id=\"votingInputHelp\" className=\"form-text\">Submit an ID proposal to vote. (You can see the list of proposals in the navbar item \"Proposals\")</div>\n        </div>\n         <Toast className=\"mb-2 warningHasVotedLightRed\" onClose={() => initView(false)} show={view} delay={5000} autohide>\n            <Toast.Header className=\"warningHasVoted\">\n            <strong className=\"mr-auto\"></strong>\n            <small></small>\n            </Toast.Header>\n            <Toast.Body className=\"warningHasVoted\">{displayWarningHasVoted}</Toast.Body>\n        </Toast>\n        <Button onClick={handleSubmitVote}>Vote</Button>\n\n      </form>\n    }\n    else if (!isVoter) {\n        displayVotingForm = <div className=\"card\"><div className=\"card-body alert-danger\">You cannot submit your vote as you're not registered in the white list.</div></div>\n    }\n    else if (workflowStatusName != 'VotingSessionStarted') {\n        displayVotingForm = <div className=\"card\"><div className=\"card-body alert-danger\">You cannot submit your vote as you're not granted to vote due to bad workflow status.</div></div>\n    }\n    \n\n    return (\n        <div className=\"container\">\n            <div className=\"divider mt-5\"><span></span><span>Submit your vote</span><span></span></div>\n            <br/>\n            <br/>\n            {displayVotingForm}\n        </div>\n    )\n}\n\nexport default Voting","import React, { Component } from 'react'\n\nexport class CardIcon extends Component {\n  render(props) {\n\n    console.log(props)\n    return (\n\n        <div className=\"so_top_icon\">\n        <svg id=\"Layer_1\" enableBackground=\"new 0 0 512 512\" height=\"50\" viewBox=\"0 0 512 512\" width=\"40\" xmlns=\"http://www.w3.org/2000/svg\">\n          <g>\n            <g>\n              <g>\n                <g>\n                  <path d=\"m47.478 452.317 295.441 19.76c5.511.369 10.277-3.8 10.645-9.31l28.393-424.517c.369-5.511-3.8-10.276-9.31-10.645l-295.441-19.76c-5.511-.369-10.276 3.8-10.645 9.31l-28.394 424.517c-.368 5.511 3.8 10.277 9.311 10.645z\" fill=\"#fae19e\" />\n                </g>\n                <g>\n                  <g>\n                    <g>\n                      <g>\n                        <g>\n                          <path d=\"m17.5 504.177h226.14l79.96-79.605v-355.86c0-5.523-4.477-10-10-10h-296.1c-5.523 0-10 4.477-10 10v425.466c0 5.522 4.477 9.999 10 9.999z\" fill=\"#fff9e9\" />\n                        </g>\n                        <path d=\"m313.601 58.712h-40c5.523 0 10 4.477 10 10v355.861l-.258 40.078 40.258-40.078v-355.861c0-5.523-4.477-10-10-10z\" fill=\"#fff4d6\" />\n                      </g>\n                    </g>\n                  </g>\n                  <path d=\"m243.64 504.177v-70.253c0-5.523 4.477-10 10-10h69.96z\" fill=\"#ffeec2\" />\n                </g>\n              </g>\n              <g>\n                <path d=\"m468.636 248.58-33.372.165v-50.826c0-9.183 7.463-16.662 16.673-16.708h.007c9.217-.046 16.693 7.371 16.693 16.562v50.807z\" fill=\"#fed23a\" />\n                <path d=\"m451.96 504.177c-10.362-10.277-16.196-24.263-16.208-38.857l-.062-73.973c0-.644.524-1.169 1.171-1.173l30.038-.149c.647-.003 1.171.517 1.171 1.161l.062 74.079c.012 14.531-5.749 28.472-16.015 38.756z\" fill=\"#54b1ff\" />\n                <path d=\"m451.959 469.333h-.01c-14.434.072-26.14-11.542-26.14-25.935v-213.527c0-6.778 5.477-12.283 12.255-12.316l27.626-.137c6.826-.034 12.378 5.49 12.378 12.316v213.436c0 14.38-11.687 26.091-26.109 26.163z\" fill=\"#fdf385\" />\n                <path d=\"m465.69 217.417-23.769.118c6.037.79 10.708 5.94 10.708 12.198v213.437c0 9.823-5.455 18.397-13.507 22.87 3.79 2.115 8.164 3.317 12.826 3.293h.01c14.422-.072 26.109-11.783 26.109-26.163v-213.436c.001-6.826-5.551-12.351-12.377-12.317z\" fill=\"#faee6e\" />\n                <path d=\"m491.274 247.925-71.615.355c-7.305.036-13.226 5.968-13.226 13.248 0 7.281 5.921 13.153 13.226 13.117l58.389-.29v77.489c0 7.281 5.921 13.153 13.226 13.117 7.305-.036 13.226-5.968 13.226-13.248v-90.672c0-7.28-5.922-13.152-13.226-13.116z\" fill=\"#54b1ff\" />\n                <g>\n                  <path d=\"m491.274 247.925-38.441.188-.167 26.311 25.381-.067v77.489c0 7.281 5.921 13.153 13.226 13.117 7.305-.036 13.226-5.968 13.226-13.248v-90.672c.001-7.282-5.921-13.154-13.225-13.118z\" fill=\"#3da7ff\" />\n                </g>\n              </g>\n            </g>\n            <g fill=\"#060606\">\n              <path d=\"m373.147 20.122-295.44-19.761c-9.631-.638-17.984 6.665-18.629 16.293l-2.311 34.557h-39.267c-9.649 0-17.5 7.851-17.5 17.5v425.466c0 9.649 7.851 17.5 17.5 17.5h226.141c1.96 0 3.902-.801 5.292-2.185l34.138-33.987c.347.074.701.133 1.065.157l58.282 3.898c9.302.614 18.005-6.952 18.629-16.293l28.393-424.515c.639-9.528-6.766-17.993-16.293-18.63zm-122.006 465.902v-52.1c0-1.378 1.122-2.5 2.5-2.5h51.9zm94.939-23.757c-.244 1.51-1.131 2.286-2.66 2.327l-46.28-3.096 31.752-31.611c1.414-1.407 2.209-3.32 2.209-5.315v-355.86c0-9.649-7.851-17.5-17.5-17.5h-77.993c-9.697 0-9.697 15 0 15h77.993c1.379 0 2.5 1.122 2.5 2.5v347.712h-62.46c-9.649 0-17.5 7.851-17.5 17.5v62.753h-218.641c-1.378 0-2.5-1.122-2.5-2.5v-425.465c0-1.378 1.122-2.5 2.5-2.5h178.168c9.697 0 9.697-15 0-15h-123.868l2.244-33.556c.244-1.511 1.131-2.286 2.661-2.327l295.44 19.76c1.511.244 2.287 1.131 2.328 2.661z\" />\n              <path d=\"m267.827 237.047h-204.553c-4.142 0-7.5 3.358-7.5 7.5s3.358 7.5 7.5 7.5h204.553c4.143 0 7.5-3.358 7.5-7.5s-3.357-7.5-7.5-7.5z\" />\n              <path d=\"m267.827 289.332h-204.553c-4.142 0-7.5 3.358-7.5 7.5s3.358 7.5 7.5 7.5h204.553c4.143 0 7.5-3.358 7.5-7.5s-3.357-7.5-7.5-7.5z\" />\n              <path d=\"m55.774 192.262c0 4.142 3.358 7.5 7.5 7.5h204.553c4.143 0 7.5-3.358 7.5-7.5s-3.357-7.5-7.5-7.5h-204.553c-4.142 0-7.5 3.358-7.5 7.5z\" />\n              <path d=\"m91.807 139.977c0 4.142 3.358 7.5 7.5 7.5h132.487c4.142 0 7.5-3.358 7.5-7.5s-3.358-7.5-7.5-7.5h-132.487c-4.142 0-7.5 3.358-7.5 7.5z\" />\n              <path d=\"m194.755 438.787c-13.489.036-26.978.065-40.467.086-4.534.007-9.067.013-13.6.016-8.215.006-13.75-1.643-15.59-10.679-1.556-7.64-12.364-6.613-14.464 0-5.19 16.337-13.774 9.936-18.582-1.053-4.797-10.963-6.027-23.233-8.122-34.9-1.54-8.573-14.506-6.17-14.732 1.994-.298 10.751-1.302 21.331-4.031 31.758-2.815 10.758-7.034 21.097-11.222 31.376-3.651 8.961 10.867 12.816 14.464 3.988 3.711-9.108 7.427-18.266 10.193-27.714 5.14 12.36 15.774 26.34 30.927 18.101 2.819-1.533 5.452-3.712 7.763-6.253 7.88 9.106 19.609 8.388 30.584 8.375 15.627-.02 31.254-.054 46.881-.095 9.649-.025 9.667-15.025-.002-15z\" />\n              <path d=\"m505.932 246.439c-3.897-3.878-9.255-5.867-14.695-6.014l-5.668.028v-10.719c0-6.529-3.878-13.427-9.433-16.862v-15.098c0-31.069-48.372-30.934-48.372.146v15.1c-5.659 3.498-9.455 9.741-9.455 16.852v10.982c-24.966 1.7-25.037 39.745.028 41.232.16 33.575.152 66.6-.028 100.737-.049 9.414 14.949 9.966 15 .079.18-34.166.188-67.22.029-100.823l37.211-.185s-.048 110.848-.048 160.784c0 24.338-37.219 24.5-37.219-.253l.013-13.677c.585-9.68-14.387-10.583-14.973-.904v12.834c0 11 3.402 20.316 9.988 26.869.586 15.693 7.198 30.878 18.369 41.956 3.205 3.18 7.642 2.208 10.744-.182 11.365-11.385 17.769-26.394 18.169-42.414 4.951-4.931 9.908-9.896 9.908-26.896l.006-68.351c12.97 3.689 26.494-6.348 26.494-19.946v-90.672c0-5.523-2.155-10.709-6.068-14.603zm-72.623-5.727v-10.841c0-2.219 1.523-4.08 3.573-4.633l30.025-.149c.84.208 1.615.605 2.243 1.231.915.911 1.419 2.123 1.419 3.414v10.794zm18.671-52c4.604 0 9.155 4.514 9.155 9.062v12.166l-18.372.091v-12.111c.001-5.053 4.133-9.183 9.217-9.208zm-.011 303.901c-3.487-4.942-6.009-10.531-7.417-16.406 2.322.503 4.674.765 7.027.765 2.627 0 5.253-.326 7.839-.957-1.374 5.964-3.892 11.587-7.449 16.598zm45.031-140.899c0 7.101-11.452 7.66-11.452.131 0 0 .013-70.974.021-77.48.005-4.196-3.483-7.509-7.558-7.509l-58.389.29c-7.242 0-7.073-11.331.074-11.366l71.615-.355c3.463.295 5.359 2.168 5.688 5.617v90.672z\" />\n            </g>\n          </g>\n        </svg>\n      </div>\n    )\n  }\n}\n\nexport default CardIcon","import React from 'react'\nimport {Link} from 'react-router-dom';\nimport CardIcon from './CardIcon';\n\nfunction HomeContent() {\n\n\n  return (\n    <div className=\"container-sm mt-5\">\n      <div className=\"w-50 mb-5\">\n      <svg baseProfile=\"tiny\" id=\"Layer_1\" xmlns=\"http://www.w3.org/2000/svg\" \n\t x=\"0px\" y=\"0px\" viewBox=\"0 0 256 256\">\n<path id=\"XMLID_1_\" d=\"M155.1,132.8c3.2,0,5.6-2.6,5.5-6l-0.9-85.6l-53.8,0.9l0.2,7.6l-17.5,18c-2.5,2.1-5.9,4.8-5.7,8.3\n\tc0,0.7,0.4,21.4,0.4,21.4h13.3l-0.2-4.2c0-1.4,0.9-2.3,2.3-2.5c1.4,0,2.5,1.1,2.5,2.3l-0.1,48.2c0,3,2.5,5.6,5.6,5.5\n\tc3,0,5.6-2.5,5.5-5.6l0.3-33.4c0-1.4,1.1-2.5,2.3-2.5c1.4,0,2.5,1.1,2.5,2.3V148c0,3,2.5,5.6,5.6,5.5c3,0,5.6-2.5,5.5-5.6v-40.6\n\tc0,0,0.9-2.5,2.3-2.5s2.5,1.1,2.5,2.3v30.2c0,3,2.5,5.6,5.6,5.5c3,0,5.6-2.5,5.5-5.6v-30.2c0-1.4,1.1-2.5,2.3-2.5\n\tc1.4,0,2.5,1.1,2.5,2.3l-0.2,19.8C149.3,130.2,151.8,132.8,155.1,132.8z M181.2,34.5l-0.7-25.8l-15.7,0.7L164.5,0h-63.4l0.9,34.5\n\tv1.2L181.2,34.5z M170.3,17.1c0.4-0.2,0.7-0.2,0.9-0.2c2.3-0.2,4.2,1.4,4.4,3.7c0.4,2.1-1.2,4.1-3.5,4.4c-0.5,0-1.1,0-1.6-0.2\n\tc-1.6-0.5-2.6-1.8-2.8-3.5C167.5,19.4,168.7,17.8,170.3,17.1z M245,176v80H15v-80h56v-74h25v8H79v109h-8v-21H53v27h157v-27h-17v21\n\th-8V110h-21v-8h29v74H245z\"/>\n</svg>\n      </div>\n      \n\n\n      <div class=\"card w-50\">\n        <img src=\"images/voting.jpeg\" class=\"card-img-top\" alt=\"\"/>\n        <div class=\"card-body mb-5\">\n          <h5 class=\"card-title\">Card title</h5>\n          <p class=\"card-text text-center\">VOTING DAPP</p>\n        </div>\n        <ul class=\"list-group list-group-flush\">\n          <li class=\"list-group-item\">Voters : Admin can add voters in a white list. <br/>Voters can read infos of other voter</li>\n          <li class=\"list-group-item\">Proposals : Registered Voters can submit a proposal and read infos about proposals</li>\n          <li class=\"list-group-item\">Voting : Registered Voters can submit a unique vote </li>\n          <li class=\"list-group-item\">Dashboard : See general infos about the voting like workflow status, results of voting, etc ...</li>\n        </ul>\n        <div class=\"card-body\">\n          <a href=\"voters\" class=\"card-link\">Voters</a>\n          <a href=\"proposals\" class=\"card-link\">Proposals</a>\n          <a href=\"voting\" class=\"card-link\">Voting</a>\n          <a href=\"dashboard\" class=\"card-link\">Dashboard</a>\n        </div>\n      </div>\n\n    </div>\n  )\n}\n\nexport default HomeContent","import React, {useState}  from 'react'\nimport {BrowserRouter, Routes, Route} from 'react-router-dom';\nimport Dashboard from './Dashboard'\nimport Voters from './Voters'\nimport Proposals from './Proposals'\nimport Voting from './Voting'\nimport HomeContent from './Homecontent'\nimport Web3 from \"web3\";\nimport {Link, NavLink} from 'react-router-dom';\nimport Toast from 'react-bootstrap/Toast';\nimport VotingContract from \"../contracts/Voting.json\";\nimport getWeb3 from \"../getWeb3\";\n\nfunction Home() {\n\n  const [error, setError] = useState('');\n  const [connectedAccount, setConnectedAccount] = useState('');\n  const [state, setState] = useState({web3:null, accounts:null, contract:null})\n\n  let web3;\n  const handleConnect = async () => {\n\n    \n    console.log('****** Connnection : ' + connectedAccount)\n    if (typeof window !== 'undefined' && typeof window.ethereum !== 'undefined') {\n      // detect Metamask account change\n      window.ethereum.on('accountsChanged', function (accounts) {\n        console.log('Changement de compte')\n        let connectedAccount = accounts[0];\n        console.log('connectedAccount :' + connectedAccount)\n        setConnectedAccount(connectedAccount);\n      })\n\n      try {\n        await window.ethereum.request({method: \"eth_requestAccounts\"})\n        web3 = new Web3(window.ethereum)\n        window.ethereum.enable();\n        console.log('Connected')\n        //Get the list of accounts\n        let accounts = await web3.eth.getAccounts();\n        let connectedAccount = accounts[0];\n        \n        //Get the contract instance\n        const networkId = await web3.eth.net.getId();\n        const deployedNetwork = VotingContract.networks[networkId];\n        const instance = new web3.eth.Contract(\n          VotingContract.abi,\n          deployedNetwork && deployedNetwork.address,\n        );\n\n        //Set the state\n        setState({web3: web3, accounts: accounts, contract:instance})\n        setConnectedAccount(connectedAccount);  \n\n\n        \n        window.ethereum.on('accountsChanged', function (accounts) {\n          console.log('accountsChanges',accounts);\n          connectedAccount = accounts[0];\n          setConnectedAccount(connectedAccount);\n          setState({web3: web3, accounts: accounts, contract:instance})\n          \n        });\n        \n\n        // detect Network account change\n        window.ethereum.on('networkChanged', function(networkId){\n          console.log('networkChanged',networkId);\n        });\n\n      }\n      catch(err) {\n        setError(err.message)\n      }\n      \n    } \n    else {\n      //Metamask not installed\n      console.log('Please install Metamask');\n    } \n  \n  }\n\n  const disconnect = (event) => {\n    event.preventDefault()\n    //web3.etethereumh.currentProvider.disconnect();\n\n  }\n\n  const connection = (connectedAccount === '' || connectedAccount === undefined)\n    ?<li className='navbar-right me-2 connect'><button className='btn btn-primary connect' onClick={handleConnect}>Connect</button></li>\n    :<li className=\"nav-item connected-account\"><a href=\"\" id=\"connectedAccountLink\" onClick={disconnect}>Connected Account : {connectedAccount}</a></li>\n\n  return (\n    <BrowserRouter>\n        <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark\">\n        <div className=\"container-fluid\">\n        <div className=\"collapse navbar-collapse\" id=\"navbarNavDropdown\">\n          <ul className=\"navbar-nav ml-auto\">\n              <li className=\"nav-item\">\n                  <NavLink className=\"nav-link\" to=\"/\">Home</NavLink>\n              </li>\n              <li className=\"nav-item\">\n                  <NavLink className=\"nav-link\" to=\"/dashboard\">Dashboard</NavLink>\n              </li>\n              <li className=\"nav-item\">\n                  <NavLink className=\"nav-link\" to=\"/voters\">Voters</NavLink>\n              </li>\n              <li className=\"nav-item\">\n                  <NavLink className=\"nav-link\" to=\"/proposals\">Proposals</NavLink>\n              </li>\n              <li className=\"nav-item\">\n                  <NavLink className=\"nav-link\" to=\"/voting\">Voting</NavLink>\n              </li>\n              {connection}\n          </ul>\n          <div className=\"toast align-items-center text-white bg-primary border-0\" id=\"test\" role=\"alert\" aria-live=\"assertive\" aria-atomic=\"true\">\n            <div className=\"d-flex\" id=\"test2\">\n              <div className=\"toast-body\">\n                Metamask Connection Error : {error}\n              </div>\n              <button type=\"button\" id=\"connectError\" className=\"btn-close btn-close-white me-2 m-auto\" data-bs-dismiss=\"toast\" aria-label=\"Close\"></button>\n            </div>\n          </div>\n        </div>\n    </div>\n    </nav>\n        <Routes>\n            <Route path=\"/dashboard\" element={<Dashboard connectedAccount={connectedAccount} stateProps={state}/>}/>  \n            <Route path=\"/\" element={<HomeContent/>}/>  \n            <Route path=\"/voters\" element={<Voters connectedAccount={connectedAccount} stateProps={state}/>}/>  \n            <Route path=\"/proposals\" element={<Proposals connectedAccount={connectedAccount} stateProps={state}/>}/>  \n            <Route path=\"/voting\" element={<Voting connectedAccount={connectedAccount} stateProps={state}/>}/>  \n\n        </Routes>\n    </BrowserRouter>\n  )  \n}\n\nexport default Home","import React, { Component } from \"react\";\nimport SimpleStorageContract from \"./contracts/SimpleStorage.json\";\nimport Home from './components/Home';\nimport getWeb3 from \"./getWeb3\";\n\nimport \"./App.css\";\n\nclass App extends Component {\n  state = { storageValue: 0, web3: null, accounts: null, contract: null };\n\n  componentDidMount = async () => {\n    /*\n    try {\n      // Get network provider and web3 instance.\n      const web3 = await getWeb3();\n\n      // Use web3 to get the user's accounts.\n      const accounts = await web3.eth.getAccounts();\n\n      // Get the contract instance.\n      const networkId = await web3.eth.net.getId();\n      const deployedNetwork = SimpleStorageContract.networks[networkId];\n      const instance = new web3.eth.Contract(\n        SimpleStorageContract.abi,\n        deployedNetwork && deployedNetwork.address,\n      );\n\n      // Set web3, accounts, and contract to the state, and then proceed with an\n      // example of interacting with the contract's methods.\n      this.setState({ web3, accounts, contract: instance }, this.runExample);\n    } catch (error) {\n      // Catch any errors for any of the above operations.\n      alert(\n        `Failed to load web3, accounts, or contract. Check console for details.`,\n      );\n      console.error(error);\n    }\n    */\n  };\n\n  runExample = async () => {\n    const { accounts, contract } = this.state;\n\n    /*\n    // Stores a given value, 5 by default.\n    await contract.methods.set(5).send({ from: accounts[0] });\n\n    // Get the value from the contract to prove it worked.\n    const response = await contract.methods.get().call();\n\n    // Update state with the result.\n    this.setState({ storageValue: response });\n    */\n  };\n\n  render() {\n    if (!this.state.web3) {\n      return <div><Home /></div>;\n    }\n    return (\n      <div className=\"App\">\n        <h1>Good to Go!</h1>\n        <p>Your Truffle Box is installed and ready.</p>\n        <h2>Smart Contract Example</h2>\n        <p>\n          If your contracts compiled and migrated successfully, below will show\n          a stored value of 5 (by default).\n        </p>\n        <p>\n          Try changing the value stored on <strong>line 42</strong> of App.js.\n        </p>\n        <div>The stored value is: {this.state.storageValue}</div>\n\n        \n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}